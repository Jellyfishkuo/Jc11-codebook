//貪心
貪心演算法的核心為，
採取在目前狀態下最好或最佳（即最有利）的選擇。
貪心演算法雖然能獲得當前最佳解，
但不保證能獲得最後（全域）最佳解，
提出想法後可以先試圖尋找有沒有能推翻原本的想法的反例，
確認無誤再實作。

//problem
有一個 N×1 的稻田，有些稻田現在有種植作物，
為了避免被動物破壞，需要放置稻草人，
稻草人可以保護該塊稻田和左右兩塊稻田，
請問最少需要多少稻草人才能保護所有稻田?

//solutoin
從左到右掃描稻田，如果第 i 塊稻田有作物，
就把稻草人放到第 i+1 塊稻田，
這樣能保護第 i,i+1,i+2 塊稻田，
接著從第 i+3 塊稻田繼續掃描。

//code
#include <bits/stdc++.h>
using namespace std;
int main(){
    string s;
    int i, n, t, tc = 1;
    cin >> t;
    while (t--){
        cin >> n >> s;
        int nc = 0;
        for (i = 0; i < n; i++)
            if (s[i] == '.')i += 2, nc++;
        cout << "Case " << tc++ << ": " << nc << endl;
    }
}


//problem
給定 N 個數，每次將兩個數 a,b 合併成 a+b，
只到最後只剩一個數，合併成本為兩數和，問最小合併成本為多少。