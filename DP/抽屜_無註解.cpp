long long dp[70][70][2];
// 初始條件
dp[1][0][0] = dp[1][1][1] = 1;
for (int i = 2; i <= 66; ++i){
    // i個抽屜0個安全且上方0 = 
    //  (底下i - 1個抽屜且1個安全且最上面L) + 
    //  (底下n - 1個抽屜0個安全且最上方為0)
    dp[i][0][0]=dp[i-1][1][1]+dp[i-1][0][0];
    for (int j = 1; j <= i; ++j) {
        dp[i][j][0] = 
          dp[i-1][j+1][1]+dp[i-1][j][0];
        dp[i][j][1] = 
          dp[i-1][j-1][1]+dp[i-1][j-1][0];
    }
} //答案在 dp[n][s][0] + dp[n][s][1]);